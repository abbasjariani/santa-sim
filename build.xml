


<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- Usage:								    -->
<!-- 									    -->
<!-- This is an ANT configuration files.  ANT is a dependency and build	    -->
<!-- manager for Java projects.  This config file can be used to compile    -->
<!-- the SANTA source files and package the resulting classes into an	    -->
<!-- executable JAR file.						    -->
<!-- 									    -->
<!-- Before building SANTA you will need to install JAVA 8.1 and the ANT    -->
<!-- tool.  Installation of those tools is system-dependent and outside the -->
<!-- scope of this description.						    -->
<!-- 									    -->
<!-- To resolve dependencies, compile java files, and create a jar	    -->
<!-- file, use the command,						    -->
<!-- 									    -->
<!--     $ ant								    -->
<!-- 									    -->
<!-- The assembled jar file will be lift in 'dist/santa.jar'		    -->
<!--     								    -->
<!-- This configuration file may need to install a helper application,	    -->
<!-- Ivy.  If that happens you will need to run `ant` a second time to	    -->
<!-- complete the build.						    -->
<!-- 									    -->
<!-- To run SANTA unit tests,						    -->
<!-- 									    -->
<!--     $ ant test							    -->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->


<project xmlns:ivy="antlib:org.apache.ivy.ant"  name="SANTA" default="dist" basedir=".">
  <description>
    build file for santa-sim
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>

  <property name="lib" location="lib"/>
  <property name="dist" location="dist"/>
  <property name="build.dir"        location="build"/>
  <property name="classes.dir"      location="${build.dir}/classes"/>
  <property name="resources.dir"    location="${build.dir}/lib"/>

  <property environment="env"/>


  <!-- Ivy does not come bundled with ANT. The "install-ivy" task ensures it gets installed on the first ant run -->
  <!-- http://stackoverflow.com/a/31542451/1135316 -->
  <available classname="org.apache.ivy.Main" property="ivy.installed"/>
  <target name="install-ivy" unless="ivy.installed">
    <mkdir dir="${user.home}/.ant/lib"/>
    <get dest="${user.home}/.ant/lib/ivy.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar"/>
    <fail message="Ivy installed  run build again"/>
  </target>


  <!-- Populates a class path containing our classes and jars -->
  <path id="classpath">
    <fileset dir="${lib}" includes="**/*.jar"/>
    <pathelement path="${build}"/>
  </path>
  
  <target name="default"> 
    <property environment="ENV"/> 
    <echo> Classpath = ${toString:classpath}</echo>
    <echo> Classpath = ${ant.refid:classpath}</echo>
  </target> 

  <target name="resolve" depends="install-ivy" description="Use ivy to resolve classpaths">
    <ivy:retrieve />
  </target>
  
  <target name="compile" depends="resolve">

    <!-- Compile the java code from ${src} into ${build} -->
    <!-- Avoid ant warning: “'includeantruntime' was not set” -->
    <!-- includeantruntime : See http://stackoverflow.com/a/5103432/1135316 -->
    <javac srcdir="${src}" destdir="${build}"
	   includeantruntime="false"  target="1.8"  source="1.8" >
      <compilerarg value="-Xlint:deprecation" />
      
      <include name="santa/**"/>
    </javac>
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <jar jarfile="${dist}/santa.jar">
      <fileset dir="${build}" includes="**/*.class,*.properties,*.png"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="santa.simulator.SimulatorMain"/>
      </manifest>
      <zipgroupfileset dir="${lib}" includes="*.jar"/>
    </jar>
  </target>

  <target name="clean">
    <delete dir="${build}"/>
  </target>

  <target name="test" depends="dist">
    <property name="test" location="test"/>
    <property name="test.src" location="${test}"/>
    <property name="test.reports" location="${test}/reports"/>
    <property name="test.build" location="${test}/build"/>

    <mkdir dir="${test.reports}"/>
    <mkdir dir="${test.build}"/>

    <javac srcdir="${test.src}" destdir="${test.build}"
	   includeantruntime="false"  target="1.8"  source="1.8">
      <classpath>
	<fileset dir="${test.src}/lib" includes="**/*.jar"/>
	<pathelement path="${test.build}"/>
	<path refid="classpath"/>
      </classpath>
      <compilerarg value="-Xlint:deprecation" />
      <include name="santa/**"/>
    </javac>

    <junit printsummary="yes" haltonfailure="yes">
      <classpath>
	<fileset dir="${test.src}/lib" includes="**/*.jar"/>
	<pathelement path="${test.build}"/>
	<path refid="classpath"/>
      </classpath>

      <formatter type="plain"/>

      <test name="my.test.TestCase" haltonfailure="no" outfile="result">
	<formatter type="xml"/>
      </test>

      <batchtest fork="yes" todir="${test.reports}">
	<fileset dir="${test.src}" includes="**/*.java"/>
      </batchtest>
    </junit>
  </target>

</project>
